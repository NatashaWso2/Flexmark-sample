package org.wso2.generator.tests;

import org.testng.Assert;
import org.testng.annotations.Test;
import org.wso2.generator.HtmlGenerator;

import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GeneratorTest {
    @Test(description = "Test if HTML pages are generated for a directory.")
    public void testHTMLGeneratorForAllFiles() throws IOException {
        HtmlGenerator.generatePagesForAllFiles();
    }

    @Test(description = "Test if HTML pages are generated for a particular file")
    public void testHTMLGeneratorForAFile() throws IOException {
        String userDir = System.getProperty("user.dir");
        String markdown_file_directory = userDir + "/src/main/resources/markdown/";

        // give the file path of the md file here
        HtmlGenerator.generatePageForFile(markdown_file_directory + "/new.md");
    }

    @Test(description = "Test if files included in HTML files are rendered")
    public void testIncludedFilesinHtml() throws IOException {
        StringBuilder layoutBuilder = new StringBuilder("{% include toc.md %}");
        HtmlGenerator.addIncludedFilesInHTML(layoutBuilder);
        Assert.assertTrue(layoutBuilder.toString().contains("<h1>Table of Contents</h1>"),
                "Included file was not properly rendered");
    }

    @Test(description = "Test if HTML files are properly generated by replacing the properties defined in Yaml front matter")
    public void testHtmlFilesGeneratedWithFrontMatter() throws IOException {
        StringBuilder layoutBuilder = new StringBuilder("{{title}}");
        Map<String, List<String>> frontMatterList = new HashMap<>();
        frontMatterList.put("title", Arrays.asList("New Title"));
        HtmlGenerator.generateHtmlFullDocument(layoutBuilder, frontMatterList, null);
        Assert.assertTrue(layoutBuilder.toString().contains("New Title"),
                "HTML file was not properly rendered after replacing the content defined in Yaml front matter");
    }

    @Test(description = "Test if content in HTML files is replaced with the generated content")
    public void testHtmlFilesGeneratedWithContent() throws IOException {
        StringBuilder layoutBuilder = new StringBuilder("<span> {{content}} </span>");
        String generatedHTMLContent = "<ul><li> hello </li> </ul>";
        HtmlGenerator.generateHtmlFullDocument(layoutBuilder, null, generatedHTMLContent);
        Assert.assertTrue(layoutBuilder.toString().contains("<ul><li> hello </li> </ul>"),
                "HTML file was not properly rendered after replacing the content generated");
    }
}
